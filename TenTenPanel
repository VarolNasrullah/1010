
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Font;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.geom.Rectangle2D;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;


public class TenTenPanel extends JPanel
      implements ActionListener
{
  private int rows, cols;
  private TenTen game;
  private TenTenCharMatrix charMatrix;
  private ScoreDisplay scoreDisplay;
  private Piece piece;
  private boolean isPieceSelected;
  private JPanel[][] squares;
  
  
  public TenTenPanel(TenTen game, int rows, int cols){
    this.game = game;
    setPreferredSize(new Dimension(400,400));
    
    setBackground(Color.WHITE);
    this.setLayout(new GridLayout(rows,cols,1,1));
    squares = new JPanel[rows][cols];
    for (int i=0; i<rows;i++)
    {
    	for (int j=0;j<cols;j++)
    	{
    		this.add(squares[j][i]);
    	}
    }
  

    charMatrix = new TenTenCharMatrix(ROWS, COLS);
   
  }
  
   public void setScoreDisplay(ScoreDisplay display)
  {
    scoreDisplay = display;
  }
  
  
  public void paintComponent(Graphics g)
  {
    super.paintComponent(g);
    
    drawCharMatrix(g);
    drawPiece(g);
  }
  
  //this needs to be finished... it's the idea but doesn't actually work
  public boolean pieceSelected(){
	  if (piece.isSelected()){
	  isPieceSelected= true;
	  }
	  else{
		  isPieceSelected= false;
	  }
  }
  
  private void drawCharMatrix(Graphics g)
  {
	  for (int i = 0; i<ROWS; i++)
	  {
		  for (int j=0; j<COLS; j++)
		  {
			  switch(charMatrix.charAt(i, j))
			  {
			  case ('c'):
				setSquareColor(j,i,Color.CYAN);
			  	break;
			  case (' '):
			  	setSquareColor(j,i,Color.WHITE);
			    break;
			  case ('g'): 
			  	setSquareColor(j,i,Color.GREEN);
			  	break;
			  case ('b'):
				setSquareColor(j,i,Color.BLUE);
				 break;
			  case ('m'):
				 setSquareColor(j,i,Color.MAGENTA);
				 break;
			  case ('o'):
				 setSquareColor(j,i,Color.ORANGE);
				 break;
			  case ('r'):
				 setSquareColor(j,i,Color.RED);
				 break;
			  case ('y'):
				 setSquareColor(j,i,Color.YELLOW);
				 break;
			  case ('z'):
				 setSquareColor(j,i,Color.GRAY);
				 break;
			  case ('p'):
					 setSquareColor(j,i,Color.PINK);
					 break;
			  }
		  }
	  }

	  // First go through the char matrix and set the color of
	  // squares 
  }
  private void setSquareColor(int x, int y, Color color)
  {
	  squares[x][y].setBackground(color);
  }
  
  @Override
public void actionPerformed(ActionEvent e) {
	// TODO Auto-generated method stub
	
}
  
  }
  
